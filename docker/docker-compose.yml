version: "3.7"
services:
  mysql:
    image: mysql:8.0
    ports:
      - "3306:3306"
    environment:
      - MYSQL_DATABASE=fast-grill
      - MYSQL_ROOT_PASSWORD=fast-grill-1234
      - MYSQL_USER=fast-grill-user
      - MYSQL_PASSWORD=fast-grill-1234
      - TZ=UTC
    command:
      - --character-set-server=utf8mb4
      - --collation-server=utf8mb4_unicode_ci
      - --lower_case_table_names=1
    volumes:
      - ./mysql:/var/lib/mysql
  redis:
    image: redis:alpine
    command: redis-server --port 6379
    container_name: redis_boot
    hostname: redis_boot
    labels:
      - "name=redis"
      - "mode=standalone"
    ports:
      - 6379:6379
  zookeeper:
    hostname: zookeeper
    image: zookeeper:3.4.9            #image file, 없으면 hub에서 자동으로 가져옴.
    ports:
      - "2184:2184"
    environment:                      #환경 변수 설정
      ZOO_MY_ID: 4
      ZOO_PORT: 2184
      ZOO_SERVER: server.4=zookeeper:2888:3888
    volumes:                          #디렉토리 마운트file
      - ./lonekafka/zookeeper/data:/data
      - ./lonekafka/zookeeper/datalog:/datalog


  kafka:
    hostname: lonekafka
    image: confluentinc/cp-kafka:5.5.1
    ports:
      - "9095:9095"
    environment:
      KAFKA_ADVERTISED_LISTENERS: LISTENER_DOCKER_INTERNAL://lonekafka:19095,LISTENER_DOCKER_EXTERNAL://${DOCKER_HOST_IP:-127.0.0.1}:9095
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: LISTENER_DOCKER_INTERNAL:PLAINTEXT,LISTENER_DOCKER_EXTERNAL:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: LISTENER_DOCKER_INTERNAL
      #KAFKA_ADVERTISED_HOST_NAME: host.docker.internal
      KAFKA_ZOOKEEPER_CONNECT: "zookeeper:2184"
      KAFKA_BROKER_ID: 4

    volumes:
      - ./lonekafka/data:/var/lib/kafka/data
    depends_on:               #zookeeper 가 생성된 후에 lonekafka를 설치한다.
      - zookeeper
